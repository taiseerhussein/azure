---
- name: Manage Windows Updates on Azure Servers
  hosts: windows # This refers to the host group defined in your Ansible inventory
  connection: winrm # Specify the WinRM connection plugin for Windows hosts
  gather_facts: false # Set to true if you need facts about the Windows hosts for other tasks

  # Define WinRM connection variables. These can also be set in AAP credentials or inventory.
  vars:
    # Use HTTPS for WinRM (port 5986) for security.
    # If using HTTP (port 5985), change ansible_port to 5985 and ansible_winrm_transport to 'ntlm'.
    ansible_port: 5986
    # ansible_winrm_transport: credssp # Recommended for production (requires CredSSP setup)
    # If using NTLM over HTTPS with a self-signed certificate, you might need:
    ansible_winrm_transport: ntlm
    # ansible_winrm_server_cert_validation: ignore # WARNING: Do not use in production with untrusted certs!

    # Set to 'true' to actually install updates. Set to 'false' to only search and print.
    perform_installation: true

    # Categories of updates to search for and install.
    # Common categories include: SecurityUpdates, CriticalUpdates, UpdateRollups, DefinitionUpdates, Drivers.
    update_categories:
      - SecurityUpdates
      - CriticalUpdates
      - UpdateRollups

  tasks:
    - name: Check for available Windows updates
      ansible.windows.win_updates:
        category_names: "{{ update_categories }}"
        state: searched # Only search for updates, do not install yet
      register: available_updates # Store the results in a variable

    - name: Print the list of available updates
      ansible.builtin.debug:
        msg: "Found {{ available_updates.updates | length }} updates for {{ inventory_hostname }}: {{ available_updates.updates | map(attribute='title') | list }}"
      when: available_updates.updates | length > 0

    - name: Inform if no updates are found
      ansible.builtin.debug:
        msg: "No updates found for {{ inventory_hostname }}."
      when: available_updates.updates | length == 0

    - name: Install available Windows updates
      ansible.windows.win_updates:
        category_names: "{{ update_categories }}"
        state: installed # Install the found updates
        reboot: true # Automatically reboot if required after installation
      when: perform_installation and available_updates.updates | length > 0
      register: install_results

    - name: Print installation results
      ansible.builtin.debug:
        msg: "Installation status for {{ inventory_hostname }}: {{ install_results }}"
      when: perform_installation and available_updates.updates | length > 0

    - name: Reboot server if pending after updates
      ansible.windows.win_reboot:
        reboot_timeout: 600 # Wait up to 10 minutes for the server to reboot
      when: perform_installation and install_results.reboot_required
